# Kafka datacenters
clusters=clusterA, clusterB
clusterA.bootstrap.servers=cluster1-kafka1:9092,cluster1-kafka2:9092,cluster1-kafka3:9092
clusterB.bootstrap.servers=cluster2-kafka1:9092,cluster2-kafka2:9092,cluster2-kafka3:9092

#clusterA and clusterB configurations. Default value for the following settings is 3.
#If you want more details about those internal configurations, please see https://docs.confluent.io/home/connect/userguide.html#kconnect-internal-topics
#and https://docs.confluent.io/platform/current/connect/references/allconfigs.html#distributed-worker-configuration
#  Mantém o estado dos Connectors do Kafka Connect,
# Guarda as configurações dos Connectors do Kafka Connect.
clusterA.config.storage.replication.factor=3
clusterB.config.storage.replication.factor=3
# Guarda os offsets dos Connectors para saber onde pararam.
clusterA.offset.storage.replication.factor=3
clusterB.offset.storage.replication.factor=3

# Guarda o estado atual dos Connectors (se estão rodando ou falhando).
clusterA.status.storage.replication.factor=3
clusterB.status.storage.replication.factor=3


#  Ativa a replicação de tópicos do clusterA para o clusterB.
clusterA->clusterB.enabled=true
# Ativa a replicação de tópicos do clusterB para o clusterA.
clusterB->clusterA.enabled=true

# MirrorMaker configuration. Default value for the following settings is 3
# Configurações globais do MM2
offset-syncs.topic.replication.factor=3
heartbeats.topic.replication.factor=3
checkpoints.topic.replication.factor=3

# Listagem de Topicos a serem replicados e consumer groups
topics=.*
groups=.*

# Define o número máximo de tarefas que o MirrorMaker pode executar simultaneamente
tasks.max=2
# replication.factor=3 # eh sera usando somente se o sync.topic.configs.enabled=false
refresh.topics.enabled=true
# Copia todas as configurações do tópico do cluster de origem para o destino.
sync.topic.configs.enabled=true
refresh.topics.interval.seconds=30

topics.blacklist=.*[\-\.]internal, .*\.replica, __consumer_offsets
groups.blacklist=console-consumer-.*, connect-.*, __.*

# Enable heartbeats and checkpoints
clusterA->clusterB.emit.heartbeats.enabled=true
# os offsets dos consumidores são replicados entre os clusters. Ativa a sincronização de checkpoints
clusterA->clusterB.emit.checkpoints.enabled=true
clusterB->clusterA.emit.heartbeats.enabled=true
# os offsets dos consumidores são replicados entre os clusters. Ativa a sincronização de checkpoints
clusterB->clusterA.emit.checkpoints.enabled=true